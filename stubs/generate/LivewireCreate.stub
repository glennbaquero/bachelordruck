<?php

namespace {{ namespace }};

use App\Livewire\Base\Form;
use Domain\{{ domain }}\Actions\{{ model }}CreateAction;
use Domain\{{ domain }}\DataTransferObjects\{{ model }}Data;
use Domain\{{ domain }}\FieldEnums\{{ model }}FieldEnum;
use Domain\{{ domain }}\FormGrids\{{ model }}FormGrid;
use Domain\{{ domain }}\Models\{{ model }};
use Domain\{{ domain }}\Rules\{{ model }}Rules;
use Livewire\Redirector;


class {{ class }} extends Form
{
    public string $name = '{{ modelLowercase }}';
    public {{ model }}   ${{ modelLowercase }};
    public string $method = 'create';

    public function mount() : void {
        $this->{{ modelLowercase }} = new {{ model }};
        $this->avatarModel = $this->{{ modelLowercase }};
    }

    public function grids(): array
    {
        return app({{ model }}FormGrid::class)();
    }

    public function rules(): array
    {
        return {{ model }}Rules::getRules($this->{{ modelLowercase }});
    }

    public function create({{ model }}CreateAction ${{ modelLowercase }}CreateAction) : Redirector
    {
        $this->validate();
        ${{ modelLowercase }}Data = {{ model }}Data::fromModel($this->{{ modelLowercase }});
        $this->{{ modelLowercase }} = ${{ modelLowercase }}CreateAction(${{ modelLowercase }}Data);
        session()->flash('message', __('notification.create_message',['model'=>__('model.'.$this->name)]));
        return redirect()->to(route('{{ modelLowercase }}.list'));
    }

    protected function validationAttributes() : array
    {
        return {{ model }}FieldEnum::labels();
    }
}
