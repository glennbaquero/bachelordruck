name: Run Tests then Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test_then_deploy:
    runs-on: ubuntu-latest
    # Declare outputs for next jobs
    outputs:
      branch_name: ${{ steps.git_branch.outputs.branch_name }}

    services:
      mysql:
        image: mariadb:10.5.15
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: orgeljann
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    name: Run Tests then Deploy

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

#      - name: Get Changes in assets
#        id: changed_assets
#        uses: tj-actions/changed-files@v18.7
#        with:
#          files: |
#            package.json
#            package-lock.json
#            resources

      - name: Get version change
        id: changed_version
        uses: tj-actions/changed-files@v18.7
        with:
          files: |
            config/app.php

      - name: Extract branch name
        shell: bash
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            echo "::set-output name=branch::$(echo ${GITHUB_REF##*/})"
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "::set-output name=branch::$(echo $GITHUB_BASE_REF)"
          else
            echo "::set-output name=branch::INVALID_EVENT_BRANCH_UNKNOWN"
          fi
        id: git_branch

      - name: Dump Steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, simplexml
          coverage: none

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-suggest

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Execute tests
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: orgeljann
        run: vendor/bin/pest

      - name: Set up Node
        if: steps.changed_version.outputs.any_changed == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Build and commit assets
        if: steps.changed_version.outputs.any_changed == 'true'
        env:
          BRANCH: ${{ needs.git_branch.outputs.branch_name }}
        run: |
          npm install
          npm run build
          npm add -D sass

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout $BRANCH_NAME
          git diff-index --quiet HEAD public/build || (git add public/build  && git commit -m "Build front-end assets" && git push -f origin $BRANCH_NAME)

      - name: Deploy
        if: steps.changed_version.outputs.any_changed == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: cd /var/www/bachelordruck && bash deploy.sh
